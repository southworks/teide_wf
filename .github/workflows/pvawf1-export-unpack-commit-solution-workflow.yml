name: pvawf1-export-unpack-commit-solution-workflow
on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: "GitHub environment name to get the solution"
        required: true
        default: "DEV"
      commit_message:
        description: "commit message"
        required: true
        default: "default commit message"
env:
  workflow_scripts_path: .github/workflows/scripts

jobs:
  check-environment-existence:
    runs-on: ubuntu-latest
    steps:
      - name: check-env-existence
        id: check-env-existence
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let res = await github.rest.repos.getAllEnvironments({
              owner: context.repo.owner,
              repo: context.repo.repo
            })

            if (res.data.environments.length > 0) {
              if(!res.data.environments.find(env => env.name === '${{ github.event.inputs.environment_name }}')) {
                core.setFailed('The environment does not exists!')
              }
            }

  export-unpack-commit-solution:
    runs-on: ubuntu-latest
    needs: check-environment-existence
    environment: ${{ github.event.inputs.environment_name }}
    steps:
      - uses: actions/checkout@v2
      - name: check-branch-existence
        id: check-branch-existence
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let branch = await github.rest.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/${{ secrets.BRANCH_TO_CREATE }}'
            })

            if (branch.data.length > 0) {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'heads/${{ secrets.BRANCH_TO_CREATE }}'
              })
            }

      - name: exec-export-unpack-commit-solution-workflow
        id: exec-export-unpack-commit-solution-workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              solution_name: '${{ secrets.SOLUTION_NAME }}',
              environment_url: '${{ secrets.ENVIRONMENT_URL }}',
              source_branch: '${{ secrets.SOURCE_BRANCH }}',
              branch_to_create: '${{ secrets.BRANCH_TO_CREATE }}',
              allow_empty_commit: 'true',
              commit_message: '${{ github.event.inputs.commit_message }}'
            }
            let id = await helper.dispatchWorkflow(github, context, 'export-unpack-commit-solution.yml', ref, params)
            core.exportVariable('workflowRunId', id)

      - name: check-workflow-status
        id: check-workflow-status
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            await helper.checkWorkflowStatus(github, context, core, 'export-unpack-commit-solution.yml', ${{ env.workflowRunId }}, 20000)